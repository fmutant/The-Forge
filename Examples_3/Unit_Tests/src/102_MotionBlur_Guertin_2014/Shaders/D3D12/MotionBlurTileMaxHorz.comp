#define UNORM 1

RWTexture2D<min16float2> TileMaxHorz: register(u0);
Texture2D<min16float3> VelocityTexture : register(t0);

cbuffer cbMotionBlurConsts : register(b3)
{
	uint4 consts;
	uint4 sizes;
}

min16float2 vmax(min16float2 s, min16float2 v)
{
#if UNORM
	s = s * min16float2(2.0h, 2.0h) - min16float2(1.0h, 1.0h);
#endif
	return dot(s, s) < dot(v, v) ? v : s;
}

[numthreads(16, 4, 1)]
void main(uint3 DTid : SV_DispatchThreadID)
{
	if (any(sizes.zy < DTid.xy)) return;

	uint3 xyl = uint3(DTid.x * consts.x, DTid.y, 0u);
	min16float2 tile_max = min16float2(0.0h, 0.0h);
	for (uint i = 0u; i < consts.x && xyl.x < sizes.x; ++i, ++xyl.x)
	{
		tile_max = vmax(VelocityTexture.Load(xyl).xy, tile_max);
	}
#if UNORM
	tile_max = tile_max * min16float2(0.5h, 0.5h) + min16float2(0.5h, 0.5h);
#endif
	TileMaxHorz[DTid.xy] = tile_max;
}
