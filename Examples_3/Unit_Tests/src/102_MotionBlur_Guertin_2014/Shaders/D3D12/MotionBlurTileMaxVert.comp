#define UNORM 1

RWTexture2D<float2> TileMaxVert: register(u0);
Texture2D<float2> TileMaxHorzTexture : register(t0);

cbuffer cbMotionBlurConsts : register(b3)
{
	int4 consts;
	int4 sizes;
}

float2 vmax(float2 s, float2 v)
{
#if UNORM
	s = s * 2.0f - 1.0f;
#endif
	return dot(s, s) < dot(v, v) ? v : s;
}

[numthreads(4, 16, 1)]
void main(uint3 DTid : SV_DispatchThreadID)
{
	if (any(sizes.zw < DTid.xy)) return;

	int3 xyl = int3(DTid.x, DTid.y * consts.x, 0);
	float2 tile_max = float2(0.0f, 0.0f);
	float2 velocity = float2(0.0f, 0.0f);
	for (int j = 0; j < consts.x && xyl.y < sizes.y; ++j, ++xyl.y)
	{
		tile_max = vmax(TileMaxHorzTexture.Load(xyl), tile_max);
	}
#if UNORM
	tile_max = tile_max * 0.5f + 0.5f;
#endif
	TileMaxVert[DTid.xy] = tile_max;
}
